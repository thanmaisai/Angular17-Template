[
  {
      "fileName": "package.json",
      "content": {
          "name": "sambo-admin",
          "version": "0.0.0",
          "scripts": {
              "ng": "ng",
              "start": "ng serve",
              "build": "ng build",
              "watch": "ng build --watch --configuration development",
              "test": "ng test"
          },
          "private": true,
          "dependencies": {
              "@angular/animations": "^16.2.0",
              "@angular/common": "^16.2.0",
              "@angular/compiler": "^16.2.0",
              "@angular/core": "^16.2.0",
              "@angular/forms": "^16.2.0",
              "@angular/platform-browser": "^16.2.0",
              "@angular/platform-browser-dynamic": "^16.2.0",
              "@angular/router": "^16.2.0",
              "chart.js": "^4.3.0",
              "ng2-charts": "^4.1.1",
              "rxjs": "~7.8.0",
              "tslib": "^2.3.0",
              "zone.js": "~0.13.0"
          },
          "devDependencies": {
              "@angular-devkit/build-angular": "^16.2.0",
              "@angular/cli": "~16.2.0",
              "@angular/compiler-cli": "^16.2.0",
              "@types/jasmine": "~4.3.0",
              "autoprefixer": "^10.4.14",
              "jasmine-core": "~4.6.0",
              "karma": "~6.4.0",
              "karma-chrome-launcher": "~3.2.0",
              "karma-coverage": "~2.2.0",
              "karma-jasmine": "~5.1.0",
              "karma-jasmine-html-reporter": "~2.1.0",
              "postcss": "^8.4.24",
              "tailwindcss": "^3.3.2",
              "typescript": "~5.1.3"
          }
      }
  },
  {
      "fileName": "angular.json",
      "content": {
          "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
          "version": 1,
          "newProjectRoot": "projects",
          "projects": {
              "sambo-admin": {
                  "projectType": "application",
                  "schematics": {
                      "@schematics/angular:component": {
                          "style": "css",
                          "skipTests": false
                      },
                      "@schematics/angular:class": {
                          "skipTests": false
                      },
                      "@schematics/angular:directive": {
                          "skipTests": false
                      },
                      "@schematics/angular:guard": {
                          "skipTests": false
                      },
                      "@schematics/angular:interceptor": {
                          "skipTests": false
                      },
                      "@schematics/angular:pipe": {
                          "skipTests": false
                      },
                      "@schematics/angular:resolver": {
                          "skipTests": false
                      },
                      "@schematics/angular:service": {
                          "skipTests": false
                      }
                  },
                  "root": "",
                  "sourceRoot": "src",
                  "prefix": "app",
                  "architect": {
                      "build": {
                          "builder": "@angular-devkit/build-angular:browser",
                          "options": {
                              "outputPath": "dist/sambo-admin",
                              "index": "src/index.html",
                              "main": "src/main.ts",
                              "polyfills": [
                                  "zone.js"
                              ],
                              "tsConfig": "tsconfig.app.json",
                              "inlineStyleLanguage": "css",
                              "assets": [
                                  "src/favicon.ico",
                                  "src/assets"
                              ],
                              "styles": [
                                  "src/styles.css"
                              ],
                              "scripts": []
                          },
                          "configurations": {
                              "production": {
                                  "budgets": [
                                      {
                                          "type": "initial",
                                          "maximumWarning": "500kb",
                                          "maximumError": "1mb"
                                      },
                                      {
                                          "type": "anyComponentStyle",
                                          "maximumWarning": "2kb",
                                          "maximumError": "4kb"
                                      }
                                  ],
                                  "outputHashing": "all"
                              },
                              "development": {
                                  "buildOptimizer": false,
                                  "optimization": false,
                                  "vendorChunk": true,
                                  "extractLicenses": false,
                                  "sourceMap": true,
                                  "namedChunks": true
                              }
                          },
                          "defaultConfiguration": "production"
                      },
                      "serve": {
                          "builder": "@angular-devkit/build-angular:dev-server",
                          "configurations": {
                              "production": {
                                  "browserTarget": "sambo-admin:build:production"
                              },
                              "development": {
                                  "browserTarget": "sambo-admin:build:development"
                              }
                          },
                          "defaultConfiguration": "development"
                      },
                      "extract-i18n": {
                          "builder": "@angular-devkit/build-angular:extract-i18n",
                          "options": {
                              "browserTarget": "sambo-admin:build"
                          }
                      },
                      "test": {
                          "builder": "@angular-devkit/build-angular:karma",
                          "options": {
                              "polyfills": [
                                  "zone.js",
                                  "zone.js/testing"
                              ],
                              "tsConfig": "tsconfig.spec.json",
                              "inlineStyleLanguage": "css",
                              "assets": [
                                  "src/favicon.ico",
                                  "src/assets"
                              ],
                              "styles": [
                                  "src/styles.css"
                              ],
                              "scripts": []
                          }
                      }
                  }
              }
          }
      }
  },
  {
      "fileName": "tailwind.config.ts",
      "content": "import { defineConfig } from 'tailwindcss';\n\nexport default defineConfig({\n  theme: {\n    extend: {\n      colors: {\n        primary: 'hsl(var(--color-primary))',\n        secondary: 'hsl(var(--color-secondary))',\n        accent: 'hsl(var(--color-accent))',\n        textPrimary: 'hsl(var(--color-text-primary))',\n        textSecondary: 'hsl(var(--color-text-secondary))',\n        positive: 'hsl(var(--color-positive))',\n        negative: 'hsl(var(--color-negative))'\n      },\n      fontFamily: {\n        primary: 'var(--font-primary)'\n      },\n      spacing: {\n        small: 'var(--spacing-small)',\n        medium: 'var(--spacing-medium)',\n        large: 'var(--spacing-large)'\n      }\n    }\n  }\n});\n"
  },
  {
      "fileName": "src/styles.css",
      "content": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    --color-primary: 0, 0%, 0%; /* #000000 */\n    --color-secondary: 0, 0%, 100%; /* #FFFFFF */\n    --color-accent: 220, 14%, 96%; /* #F3F4F6 */\n    --color-text-primary: 210, 15%, 15%; /* #111827 */\n    --color-text-secondary: 210, 7%, 50%; /* #6B7280 */\n    --color-positive: 160, 67%, 47%; /* #10B981 */\n    --color-negative: 0, 82%, 67%; /* #EF4444 */\n\n    --font-primary: 'Inter, sans-serif';\n\n    --spacing-small: 8px;\n    --spacing-medium: 16px;\n    --spacing-large: 24px;\n  }\n\n  body {\n    font-family: var(--font-primary);\n    color: hsl(var(--color-text-primary));\n    background-color: hsl(var(--color-secondary));\n  }\n}\n"
  },
  {
      "fileName": "src/app/app.component.ts",
      "content": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterOutlet } from '@angular/router';\nimport { HeaderComponent } from './components/header/header.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterOutlet,\n    HeaderComponent,\n    SidebarComponent\n  ],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Sambo Admin';\n}\n"
  },
  {
      "fileName": "src/app/app.component.html",
      "content": "<div class=\"app-container\">\n  <!-- Sidebar -->\n  <app-sidebar class=\"sidebar\"></app-sidebar>\n  \n  <!-- Main content area -->\n  <div class=\"main-content\">\n    <!-- Header -->\n    <app-header class=\"header\"></app-header>\n    \n    <!-- Router outlet for page content -->\n    <main class=\"content\">\n      <router-outlet></router-outlet>\n    </main>\n  </div>\n</div>\n"
  },
  {
      "fileName": "src/app/app.component.css",
      "content": ".app-container {\n  @apply flex h-screen w-full bg-gray-50;\n}\n\n.sidebar {\n  @apply w-60 h-full fixed left-0 top-0 border-r border-gray-200;\n}\n\n.main-content {\n  @apply flex flex-col w-full ml-60;\n}\n\n.header {\n  @apply w-full sticky top-0 z-10;\n}\n\n.content {\n  @apply p-6 overflow-auto flex-grow;\n}\n"
  },
  {
      "fileName": "src/app/app.routes.ts",
      "content": "import { Routes } from '@angular/router';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\n\nexport const routes: Routes = [\n  { \n    path: '', \n    redirectTo: 'dashboard', \n    pathMatch: 'full' \n  },\n  { \n    path: 'dashboard', \n    component: DashboardComponent,\n    title: 'Dashboard - Sambo Admin'\n  },\n  { \n    path: 'users', \n    loadComponent: () => import('./components/users/users.component').then(m => m.UsersComponent),\n    title: 'Users - Sambo Admin'\n  },\n  { \n    path: 'transactions', \n    loadComponent: () => import('./components/transactions/transactions.component').then(m => m.TransactionsComponent),\n    title: 'Transactions - Sambo Admin'\n  },\n  { \n    path: 'analytics', \n    loadComponent: () => import('./components/analytics/analytics.component').then(m => m.AnalyticsComponent),\n    title: 'Analytics - Sambo Admin'\n  },\n  { \n    path: '**', \n    redirectTo: 'dashboard' \n  }\n];\n"
  },
  {
      "fileName": "src/app/components/header/header.component.ts",
      "content": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n  title = 'Sambo Admin';\n}\n"
  },
  {
      "fileName": "src/app/components/header/header.component.html",
      "content": "<div class=\"header-container\">\n  <div class=\"header-title\">{{ title }}</div>\n  <div class=\"header-actions\">\n    <button class=\"notification-btn\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\n      </svg>\n    </button>\n    <button class=\"profile-btn\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n      </svg>\n    </button>\n  </div>\n</div>"
  },
  {
      "fileName": "src/app/components/header/header.component.css",
      "content": ".header-container {\n  @apply flex justify-between items-center py-4 px-6 bg-white border-b border-gray-200;\n}\n\n.header-title {\n  @apply text-lg font-medium text-gray-800;\n}\n\n.header-actions {\n  @apply flex items-center space-x-4;\n}\n\n.notification-btn, .profile-btn {\n  @apply p-1 rounded-full text-gray-600 hover:bg-gray-100 focus:outline-none;\n}\n\n.notification-btn svg, .profile-btn svg {\n  @apply h-6 w-6;\n}"
  },
  {
      "fileName": "src/app/components/sidebar/sidebar.component.ts",
      "content": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-sidebar',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent {\n  navItems = [\n    { icon: 'dashboard', label: 'Dashboard', route: '/dashboard', active: true },\n    { icon: 'users', label: 'Users', route: '/users', active: false, badge: 6 },\n    { icon: 'transactions', label: 'Transactions', route: '/transactions', active: false },\n    { icon: 'analytics', label: 'Analytics', route: '/analytics', active: false }\n  ];\n\n  settingsItems = [\n    { icon: 'profile', label: 'Profile', route: '/settings/profile', description: 'Update your details' },\n    { icon: 'security', label: 'Security', route: '/settings/security', description: 'Manage your password' },\n    { icon: 'communication', label: 'Communication', route: '/settings/communication', description: 'Email and phone' },\n    { icon: 'permissions', label: 'Permissions', route: '/settings/permissions', description: 'Access control' },\n    { icon: 'help', label: 'Help', route: '/help', description: 'Get support' },\n    { icon: 'logout', label: 'Logout', route: '/logout', description: 'Exit the app' }\n  ];\n}\n"
  },
  {
      "fileName": "src/app/components/sidebar/sidebar.component.html",
      "content": "<div class=\"sidebar\">\n  <div class=\"logo-container\">\n    <h1 class=\"logo\">Sambo Admin</h1>\n  </div>\n\n  <nav class=\"nav-section\">\n    <ul>\n      <li *ngFor=\"let item of navItems\" [class.active]=\"item.active\">\n        <a [routerLink]=\"item.route\" class=\"nav-link\">\n          <div class=\"icon\" [ngClass]=\"item.icon\">\n            <ng-container [ngSwitch]=\"item.icon\">\n              <svg *ngSwitchCase=\"'dashboard'\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path d=\"M2 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1H3a1 1 0 01-1-1V4zM8 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1H9a1 1 0 01-1-1V4zM15 3a1 1 0 00-1 1v12a1 1 0 001 1h2a1 1 0 001-1V4a1 1 0 00-1-1h-2z\" />\n              </svg>\n              <svg *ngSwitchCase=\"'users'\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path d=\"M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z\" />\n              </svg>\n              <svg *ngSwitchCase=\"'transactions'\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z\" clip-rule=\"evenodd\" />\n              </svg>\n              <svg *ngSwitchCase=\"'analytics'\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path d=\"M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z\" />\n              </svg>\n            </ng-container>\n          </div>\n          <span>{{ item.label }}</span>\n          <span *ngIf=\"item.badge\" class=\"badge\">{{ item.badge }}</span>\n        </a>\n      </li>\n    </ul>\n  </nav>\n\n  <div class=\"settings-section\">\n    <div class=\"settings-header\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n        <path fill-rule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clip-rule=\"evenodd\" />\n      </svg>\n      <span>Settings</span>\n    </div>\n    <ul>\n      <li *ngFor=\"let item of settingsItems\">\n        <a [routerLink]=\"item.route\" class=\"settings-link\">\n          <div class=\"icon\" [ngClass]=\"item.icon\">\n            <ng-container [ngSwitch]=\"item.icon\">\n              <svg *ngSwitchCase=\"'profile'\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clip-rule=\"evenodd\" />\n              </svg>\n              <svg *ngSwitchCase=\"'security'\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\" clip-rule=\"evenodd\" />\n              </svg>\n              <svg *ngSwitchCase=\"'communication'\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path d=\"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z\" />\n                <path d=\"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z\" />\n              </svg>\n              <svg *ngSwitchCase=\"'permissions'\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n              </svg>\n              <svg *ngSwitchCase=\"'help'\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />\n              </svg>\n              <svg *ngSwitchCase=\"'logout'\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M3 3a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1V4a1 1 0 00-1-1H3zm11 3a1 1 0 10-2 0v4.586l-1.293-1.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L14 10.586V6z\" clip-rule=\"evenodd\" />\n              </svg>\n            </ng-container>\n          </div>\n          <div class=\"link-content\">\n            <span class=\"link-label\">{{ item.label }}</span>\n            <span class=\"link-description\">{{ item.description }}</span>\n          </div>\n        </a>\n      </li>\n    </ul>\n  </div>\n</div>"
  },
  {
      "fileName": "src/app/components/sidebar/sidebar.component.css",
      "content": ".sidebar {\n  width: 230px;\n  height: 100vh;\n  background-color: white;\n  border-right: 1px solid #f0f0f0;\n  display: flex;\n  flex-direction: column;\n  font-family: 'Inter', sans-serif;\n  overflow-y: auto;\n}\n\n.logo-container {\n  padding: 16px;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.logo {\n  font-size: 16px;\n  font-weight: 600;\n  color: #000;\n  margin: 0;\n}\n\n.nav-section {\n  padding: 16px 0;\n}\n\n.nav-section ul, .settings-section ul {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.nav-link {\n  display: flex;\n  align-items: center;\n  padding: 12px 16px;\n  color: #4b5563;\n  text-decoration: none;\n  position: relative;\n}\n\n.nav-link:hover {\n  background-color: #f9fafb;\n}\n\n.active .nav-link {\n  background-color: #f3f4f6;\n  color: #000;\n  font-weight: 500;\n}\n\n.icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  margin-right: 12px;\n}\n\n.badge {\n  background-color: #000;\n  color: white;\n  font-size: 12px;\n  font-weight: 500;\n  padding: 2px 6px;\n  border-radius: 9999px;\n  margin-left: auto;\n}\n\n.settings-section {\n  margin-top: auto;\n  padding: 16px 0;\n  border-top: 1px solid #f0f0f0;\n}\n\n.settings-header {\n  display: flex;\n  align-items: center;\n  padding: 0 16px 8px 16px;\n  color: #6b7280;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.settings-header svg {\n  width: 16px;\n  height: 16px;\n  margin-right: 8px;\n}\n\n.settings-link {\n  display: flex;\n  align-items: center;\n  padding: 8px 16px;\n  color: #4b5563;\n  text-decoration: none;\n}\n\n.settings-link:hover {\n  background-color: #f9fafb;\n}\n\n.link-content {\n  display: flex;\n  flex-direction: column;\n}\n\n.link-label {\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.link-description {\n  font-size: 12px;\n  color: #6b7280;\n  margin-top: 2px;\n}\n\nsvg {\n  width: 20px;\n  height: 20px;\n}"
  },
  {
      "fileName": "src/app/components/dashboard/dashboard.component.ts",
      "content": "import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Transaction } from '../../models/transaction.model';\nimport { TransactionService } from '../../services/transaction.service';\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  selectedTimeframe: 'Daily' | 'Weekly' | 'Monthly' = 'Daily';\n  \n  // Stats data\n  newUsersToday = 24;\n  newUsersChange = '+12%';\n  totalUsers = 1284;\n  totalUsersChange = '+2.5%';\n  transactionsToday = 'R 12,543';\n  transactionsChange = '+18%';\n  nonUsers = 342;\n  nonUsersChange = '-4%';\n  \n  // Chart data\n  chartMonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  chartValues = [45000, 60000, 55000, 65000, 70000, 75000, 85000, 70000, 75000, 80000, 90000, 100000];\n  \n  // Recent transactions\n  recentTransactions: Transaction[] = [\n    {\n      id: '1',\n      userName: 'Thabo Mbeki',\n      date: '2023-11-14',\n      amount: 250.00,\n      type: 'credit'\n    },\n    {\n      id: '2',\n      userName: 'Nomzamo Mbatha',\n      date: '2023-11-13',\n      amount: 1000.00,\n      type: 'debit'\n    },\n    {\n      id: '3',\n      userName: 'Siya Kolisi',\n      date: '2023-11-12',\n      amount: 500.00,\n      type: 'credit'\n    },\n    {\n      id: '4',\n      userName: 'Trevor Noah',\n      date: '2023-11-11',\n      amount: 750.00,\n      type: 'debit'\n    },\n    {\n      id: '5',\n      userName: 'Patrice Motsepe',\n      date: '2023-11-10',\n      amount: 2500.00,\n      type: 'credit'\n    }\n  ];\n\n  constructor(private transactionService: TransactionService) {}\n\n  ngOnInit(): void {\n    // In a real application, we would fetch this data from the service\n    // this.loadDashboardData();\n  }\n\n  changeTimeframe(timeframe: 'Daily' | 'Weekly' | 'Monthly'): void {\n    this.selectedTimeframe = timeframe;\n    // In a real application, we would fetch new data based on the timeframe\n    // this.loadDashboardData(timeframe);\n  }\n\n  private loadDashboardData(timeframe: string = 'Daily'): void {\n    // Example of how we would fetch data in a real application\n    // this.transactionService.getDashboardStats(timeframe).subscribe(stats => {\n    //   this.newUsersToday = stats.newUsers;\n    //   this.totalUsers = stats.totalUsers;\n    //   // etc.\n    // });\n    // \n    // this.transactionService.getRecentTransactions().subscribe(transactions => {\n    //   this.recentTransactions = transactions;\n    // });\n  }\n\n  getInitial(name: string): string {\n    return name.charAt(0);\n  }\n\n  formatAmount(amount: number, type: string): string {\n    return type === 'credit' ? `+R ${amount.toFixed(2)}` : `-R ${amount.toFixed(2)}`;\n  }\n\n  getAmountClass(type: string): string {\n    return type === 'credit' ? 'text-green-500' : 'text-red-500';\n  }\n}\n"
  },
  {
      "fileName": "src/app/components/dashboard/dashboard.component.html",
      "content": "<div class=\"dashboard-container p-6\">\n  <h1 class=\"text-2xl font-bold mb-1\">Dashboard</h1>\n  <p class=\"text-gray-500 mb-6\">Overview of your platform statistics and performance.</p>\n  \n  <!-- Timeframe selector -->\n  <div class=\"flex gap-2 mb-6\">\n    <button \n      [ngClass]=\"{'bg-gray-200': selectedTimeframe === 'Daily', 'bg-white': selectedTimeframe !== 'Daily'}\"\n      class=\"px-4 py-2 rounded-md text-sm font-medium\" \n      (click)=\"changeTimeframe('Daily')\">Daily</button>\n    <button \n      [ngClass]=\"{'bg-gray-200': selectedTimeframe === 'Weekly', 'bg-white': selectedTimeframe !== 'Weekly'}\"\n      class=\"px-4 py-2 rounded-md text-sm font-medium\" \n      (click)=\"changeTimeframe('Weekly')\">Weekly</button>\n    <button \n      [ngClass]=\"{'bg-gray-200': selectedTimeframe === 'Monthly', 'bg-white': selectedTimeframe !== 'Monthly'}\"\n      class=\"px-4 py-2 rounded-md text-sm font-medium\" \n      (click)=\"changeTimeframe('Monthly')\">Monthly</button>\n  </div>\n  \n  <!-- Stats cards -->\n  <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\n    <!-- New Users Today -->\n    <div class=\"bg-white p-4 rounded-lg shadow-sm\">\n      <div class=\"flex justify-between items-center mb-2\">\n        <span class=\"text-sm text-gray-600\">New Users Today</span>\n        <span class=\"text-gray-400\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" />\n          </svg>\n        </span>\n      </div>\n      <div class=\"text-2xl font-bold\">{{ newUsersToday }}</div>\n      <div class=\"text-sm text-green-500\">{{ newUsersChange }} from yesterday</div>\n    </div>\n    \n    <!-- Total Users -->\n    <div class=\"bg-white p-4 rounded-lg shadow-sm\">\n      <div class=\"flex justify-between items-center mb-2\">\n        <span class=\"text-sm text-gray-600\">Total Users</span>\n        <span class=\"text-gray-400\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path d=\"M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3zM6 8a2 2 0 11-4 0 2 2 0 014 0zM16 18v-3a5.972 5.972 0 00-.75-2.906A3.005 3.005 0 0119 15v3h-3zM4.75 12.094A5.973 5.973 0 004 15v3H1v-3a3 3 0 013.75-2.906z\" />\n          </svg>\n        </span>\n      </div>\n      <div class=\"text-2xl font-bold\">{{ totalUsers }}</div>\n      <div class=\"text-sm text-green-500\">{{ totalUsersChange }} from last week</div>\n    </div>\n    \n    <!-- Transactions Today -->\n    <div class=\"bg-white p-4 rounded-lg shadow-sm\">\n      <div class=\"flex justify-between items-center mb-2\">\n        <span class=\"text-sm text-gray-600\">Transactions Today</span>\n        <span class=\"text-gray-400\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z\" clip-rule=\"evenodd\" />\n          </svg>\n        </span>\n      </div>\n      <div class=\"text-2xl font-bold\">{{ transactionsToday }}</div>\n      <div class=\"text-sm text-green-500\">{{ transactionsChange }} from yesterday</div>\n    </div>\n    \n    <!-- Non-Users -->\n    <div class=\"bg-white p-4 rounded-lg shadow-sm\">\n      <div class=\"flex justify-between items-center mb-2\">\n        <span class=\"text-sm text-gray-600\">Non-Users</span>\n        <span class=\"text-gray-400\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clip-rule=\"evenodd\" />\n          </svg>\n        </span>\n      </div>\n      <div class=\"text-2xl font-bold\">{{ nonUsers }}</div>\n      <div class=\"text-sm text-red-500\">{{ nonUsersChange }} from yesterday</div>\n    </div>\n  </div>\n  \n  <!-- Charts and Recent Transactions -->\n  <div class=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n    <!-- Transaction Overview Chart -->\n    <div class=\"bg-white p-4 rounded-lg shadow-sm lg:col-span-2\">\n      <h2 class=\"text-lg font-semibold mb-1\">Transaction Overview</h2>\n      <p class=\"text-sm text-gray-500 mb-4\">Transaction volume over time</p>\n      \n      <div class=\"chart-container h-64\">\n        <!-- Simple bar chart representation -->\n        <div class=\"flex h-full items-end\">\n          <div class=\"flex-1 flex flex-col justify-between h-full\">\n            <div class=\"text-xs text-gray-400\">R180000</div>\n            <div class=\"text-xs text-gray-400\">R135000</div>\n            <div class=\"text-xs text-gray-400\">R90000</div>\n            <div class=\"text-xs text-gray-400\">R45000</div>\n            <div class=\"text-xs text-gray-400\">R0</div>\n          </div>\n          <div class=\"flex-grow flex items-end justify-between\">\n            <ng-container *ngFor=\"let value of chartValues; let i = index\">\n              <div class=\"flex flex-col items-center\">\n                <div \n                  class=\"bg-black w-8\" \n                  [style.height.px]=\"(value / 180000) * 200\">\n                </div>\n                <div class=\"text-xs text-gray-400 mt-2\">{{ chartMonths[i] }}</div>\n              </div>\n            </ng-container>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Recent Transactions -->\n    <div class=\"bg-white p-4 rounded-lg shadow-sm\">\n      <h2 class=\"text-lg font-semibold mb-1\">Recent Transactions</h2>\n      <p class=\"text-sm text-gray-500 mb-4\">Latest transactions on the platform</p>\n      \n      <div class=\"space-y-4\">\n        <div *ngFor=\"let transaction of recentTransactions\" class=\"flex items-center justify-between\">\n          <div class=\"flex items-center\">\n            <div class=\"w-8 h-8 rounded-full bg-gray-200 flex items-center justify-center mr-3\">\n              {{ getInitial(transaction.userName) }}\n            </div>\n            <div>\n              <div class=\"font-medium\">{{ transaction.userName }}</div>\n              <div class=\"text-xs text-gray-500\">{{ transaction.date }}</div>\n            </div>\n          </div>\n          <div [ngClass]=\"getAmountClass(transaction.type)\" class=\"font-medium\">\n            {{ formatAmount(transaction.amount, transaction.type) }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
  },
  {
      "fileName": "src/app/components/dashboard/dashboard.component.css",
      "content": ".dashboard-container {\n  background-color: #f9fafb;\n}\n\n.chart-container {\n  position: relative;\n}\n"
  },
  {
      "fileName": "src/app/components/search/search.component.ts",
      "content": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-search',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent {\n  searchQuery: string = '';\n\n  onSearch(): void {\n    // TODO: Implement search functionality\n    console.log('Searching for:', this.searchQuery);\n  }\n}\n"
  },
  {
      "fileName": "src/app/components/search/search.component.html",
      "content": "<div class=\"search-container\">\n  <div class=\"relative\">\n    <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n      <svg class=\"w-4 h-4 text-gray-400\" aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 20 20\">\n        <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z\"/>\n      </svg>\n    </div>\n    <input \n      type=\"search\" \n      [(ngModel)]=\"searchQuery\"\n      (keyup.enter)=\"onSearch()\"\n      class=\"w-full p-2 pl-10 text-sm text-gray-900 border border-gray-200 rounded-lg bg-white focus:ring-2 focus:ring-gray-100 focus:outline-none\" \n      placeholder=\"Search...\" \n      aria-label=\"Search\">\n  </div>\n</div>"
  },
  {
      "fileName": "src/app/components/search/search.component.css",
      "content": ".search-container {\n  width: 100%;\n}\n\ninput[type=\"search\"]::-webkit-search-decoration,\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-results-button,\ninput[type=\"search\"]::-webkit-search-results-decoration {\n  -webkit-appearance: none;\n}\n"
  },
  {
      "fileName": "src/app/components/stat-card/stat-card.component.ts",
      "content": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-stat-card',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './stat-card.component.html',\n  styleUrls: ['./stat-card.component.css']\n})\nexport class StatCardComponent {\n  @Input() title: string = '';\n  @Input() value: string | number = '';\n  @Input() change: string = '';\n  @Input() icon: string = '';\n  @Input() isPositive: boolean = true;\n  @Input() isNegative: boolean = false;\n  @Input() period: string = 'yesterday';\n}\n"
  },
  {
      "fileName": "src/app/components/stat-card/stat-card.component.html",
      "content": "<div class=\"stat-card\">\n  <div class=\"flex justify-between items-start mb-2\">\n    <h3 class=\"text-sm font-medium text-gray-600\">{{ title }}</h3>\n    <div class=\"icon-container\">\n      <ng-container [ngSwitch]=\"icon\">\n        <svg *ngSwitchCase=\"'user-plus'\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z\" />\n        </svg>\n        <svg *ngSwitchCase=\"'users'\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\" />\n        </svg>\n        <svg *ngSwitchCase=\"'transaction'\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n        </svg>\n        <svg *ngSwitchCase=\"'user-minus'\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n        <svg *ngSwitchDefault xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n      </ng-container>\n    </div>\n  </div>\n  \n  <div class=\"value-container\">\n    <h2 class=\"text-2xl font-bold text-gray-800\">{{ value }}</h2>\n  </div>\n  \n  <div class=\"mt-1\">\n    <span \n      [ngClass]=\"{\n        'text-green-600': isPositive,\n        'text-red-600': isNegative,\n        'text-gray-600': !isPositive && !isNegative\n      }\" \n      class=\"text-sm font-medium\">\n      {{ change }}\n    </span>\n    <span class=\"text-sm text-gray-500 ml-1\">from {{ period }}</span>\n  </div>\n</div>\n"
  },
  {
      "fileName": "src/app/components/stat-card/stat-card.component.css",
      "content": ".stat-card {\n  background-color: white;\n  border-radius: 0.375rem;\n  padding: 1.25rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  height: 100%;\n}\n\n.icon-container {\n  color: #6B7280;\n}\n\n.value-container {\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n}\n"
  },
  {
      "fileName": "src/app/components/transaction-overview/transaction-overview.component.ts",
      "content": "import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TransactionService } from '../../services/transaction.service';\nimport { Transaction } from '../../models/transaction.model';\n\n@Component({\n  selector: 'app-transaction-overview',\n  templateUrl: './transaction-overview.component.html',\n  styleUrls: ['./transaction-overview.component.css'],\n  standalone: true,\n  imports: [CommonModule]\n})\nexport class TransactionOverviewComponent implements OnInit {\n  transactionData: { month: string; amount: number }[] = [];\n  months: string[] = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  maxValue: number = 180000;\n  yAxisValues: number[] = [0, 45000, 90000, 135000, 180000];\n\n  constructor(private transactionService: TransactionService) {}\n\n  ngOnInit(): void {\n    this.loadTransactionData();\n  }\n\n  loadTransactionData(): void {\n    // In a real application, this would come from the TransactionService\n    // For now, we're using the exact data from the image\n    this.transactionData = [\n      { month: 'Jan', amount: 45000 },\n      { month: 'Feb', amount: 60000 },\n      { month: 'Mar', amount: 55000 },\n      { month: 'Apr', amount: 65000 },\n      { month: 'May', amount: 75000 },\n      { month: 'Jun', amount: 80000 },\n      { month: 'Jul', amount: 90000 },\n      { month: 'Aug', amount: 75000 },\n      { month: 'Sep', amount: 80000 },\n      { month: 'Oct', amount: 95000 },\n      { month: 'Nov', amount: 135000 },\n      { month: 'Dec', amount: 170000 }\n    ];\n  }\n\n  getBarHeight(amount: number): string {\n    const percentage = (amount / this.maxValue) * 100;\n    return `${percentage}%`;\n  }\n}\n"
  },
  {
      "fileName": "src/app/components/transaction-overview/transaction-overview.component.html",
      "content": "<div class=\"p-6 bg-white rounded-lg shadow\">\n  <div class=\"mb-4\">\n    <h2 class=\"text-lg font-semibold text-gray-800\">Transaction Overview</h2>\n    <p class=\"text-sm text-gray-500\">Transaction volume over time</p>\n  </div>\n  \n  <div class=\"relative h-64\">\n    <!-- Y-axis labels -->\n    <div class=\"absolute left-0 top-0 h-full flex flex-col justify-between text-xs text-gray-500\">\n      <div *ngFor=\"let value of yAxisValues\">\n        R{{ value | number }}\n      </div>\n    </div>\n    \n    <!-- Chart grid lines -->\n    <div class=\"ml-16 h-full flex flex-col justify-between\">\n      <div *ngFor=\"let value of yAxisValues\" class=\"border-t border-gray-200 w-full h-0\"></div>\n    </div>\n    \n    <!-- Bar chart -->\n    <div class=\"absolute left-16 right-0 bottom-8 top-0 flex items-end\">\n      <div *ngFor=\"let item of transactionData\" class=\"flex-1 flex flex-col items-center\">\n        <div class=\"w-8 bg-black rounded-sm\" [style.height]=\"getBarHeight(item.amount)\"></div>\n      </div>\n    </div>\n    \n    <!-- X-axis labels -->\n    <div class=\"absolute left-16 right-0 bottom-0 flex text-xs text-gray-500\">\n      <div *ngFor=\"let item of transactionData\" class=\"flex-1 text-center\">\n        {{ item.month }}\n      </div>\n    </div>\n  </div>\n</div>\n"
  },
  {
      "fileName": "src/app/components/transaction-overview/transaction-overview.component.css",
      "content": "/* Additional custom styles can be added here if needed */\n/* Most styling is handled by Tailwind CSS utility classes in the HTML */\n"
  },
  {
      "fileName": "src/app/components/recent-transactions/recent-transactions.component.ts",
      "content": "import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Transaction } from '../../models/transaction.model';\nimport { TransactionService } from '../../services/transaction.service';\n\n@Component({\n  selector: 'app-recent-transactions',\n  templateUrl: './recent-transactions.component.html',\n  styleUrls: ['./recent-transactions.component.css'],\n  standalone: true,\n  imports: [CommonModule]\n})\nexport class RecentTransactionsComponent implements OnInit {\n  transactions: Transaction[] = [];\n  \n  constructor(private transactionService: TransactionService) {}\n  \n  ngOnInit(): void {\n    // In a real application, we would fetch this data from the service\n    // this.transactionService.getRecentTransactions().subscribe(data => {\n    //   this.transactions = data;\n    // });\n    \n    // Using mock data from the image\n    this.transactions = [\n      {\n        id: '1',\n        userName: 'Thabo Mbeki',\n        date: '2023-11-14',\n        amount: 250.00,\n        type: 'credit'\n      },\n      {\n        id: '2',\n        userName: 'Nomzamo Mbatha',\n        date: '2023-11-13',\n        amount: -1000.00,\n        type: 'debit'\n      },\n      {\n        id: '3',\n        userName: 'Siya Kolisi',\n        date: '2023-11-12',\n        amount: 500.00,\n        type: 'credit'\n      },\n      {\n        id: '4',\n        userName: 'Trevor Noah',\n        date: '2023-11-11',\n        amount: -750.00,\n        type: 'debit'\n      },\n      {\n        id: '5',\n        userName: 'Patrice Motsepe',\n        date: '2023-11-10',\n        amount: 2500.00,\n        type: 'credit'\n      }\n    ];\n  }\n\n  getInitial(name: string): string {\n    return name.charAt(0);\n  }\n\n  formatAmount(amount: number): string {\n    const prefix = amount >= 0 ? '+R ' : '-R ';\n    return prefix + Math.abs(amount).toFixed(2);\n  }\n\n  getAmountClass(amount: number): string {\n    return amount >= 0 ? 'text-green-500' : 'text-red-500';\n  }\n}\n"
  },
  {
      "fileName": "src/app/components/recent-transactions/recent-transactions.component.html",
      "content": "<div class=\"bg-white rounded-lg p-6 h-full\">\n  <div class=\"mb-4\">\n    <h2 class=\"text-xl font-semibold text-gray-800\">Recent Transactions</h2>\n    <p class=\"text-sm text-gray-500\">Latest transactions on the platform</p>\n  </div>\n  \n  <div class=\"space-y-4\">\n    <div *ngFor=\"let transaction of transactions\" class=\"flex items-center justify-between py-2\">\n      <div class=\"flex items-center\">\n        <div [class]=\"'w-8 h-8 rounded-full flex items-center justify-center text-white ' + (transaction.amount >= 0 ? 'bg-green-100 text-green-600' : 'bg-red-100 text-red-600')\">\n          {{ getInitial(transaction.userName) }}\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"font-medium text-gray-800\">{{ transaction.userName }}</p>\n          <p class=\"text-xs text-gray-500\">{{ transaction.date }}</p>\n        </div>\n      </div>\n      <div [class]=\"getAmountClass(transaction.amount)\">\n        {{ formatAmount(transaction.amount) }}\n      </div>\n    </div>\n  </div>\n</div>"
  },
  {
      "fileName": "src/app/components/recent-transactions/recent-transactions.component.css",
      "content": "/* Component-specific styles can be added here if needed */\n/* Most styling is handled by Tailwind CSS utility classes in the HTML */\n"
  },
  {
      "fileName": "src/app/services/transaction.service.ts",
      "content": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { Transaction, TransactionSummary, TransactionVolume } from '../models/transaction.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionService {\n  private apiUrl = 'api/transactions'; // Replace with actual API endpoint\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Get all transactions\n   */\n  getTransactions(): Observable<Transaction[]> {\n    return this.http.get<Transaction[]>(this.apiUrl);\n  }\n\n  /**\n   * Get recent transactions\n   * @param limit Number of transactions to return\n   */\n  getRecentTransactions(limit: number = 5): Observable<Transaction[]> {\n    return this.http.get<Transaction[]>(`${this.apiUrl}/recent?limit=${limit}`);\n  }\n\n  /**\n   * Get transaction summary for today\n   */\n  getTransactionSummary(): Observable<TransactionSummary> {\n    return this.http.get<TransactionSummary>(`${this.apiUrl}/summary`);\n  }\n\n  /**\n   * Get transaction volume over time for chart display\n   * @param period The time period (daily, weekly, monthly)\n   */\n  getTransactionVolume(period: 'daily' | 'weekly' | 'monthly' = 'monthly'): Observable<TransactionVolume[]> {\n    return this.http.get<TransactionVolume[]>(`${this.apiUrl}/volume?period=${period}`);\n  }\n\n  /**\n   * Create a new transaction\n   * @param transaction The transaction to create\n   */\n  createTransaction(transaction: Transaction): Observable<Transaction> {\n    return this.http.post<Transaction>(this.apiUrl, transaction);\n  }\n\n  /**\n   * Update an existing transaction\n   * @param id Transaction ID\n   * @param transaction Updated transaction data\n   */\n  updateTransaction(id: string, transaction: Transaction): Observable<Transaction> {\n    return this.http.put<Transaction>(`${this.apiUrl}/${id}`, transaction);\n  }\n\n  /**\n   * Delete a transaction\n   * @param id Transaction ID to delete\n   */\n  deleteTransaction(id: string): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n}\n"
  },
  {
      "fileName": "src/app/models/transaction.model.ts",
      "content": "export interface Transaction {\n  id?: string;\n  userId: string;\n  userName: string;\n  date: string;\n  amount: number;\n  isPositive: boolean;\n}\n\nexport interface TransactionSummary {\n  transactionsToday: number;\n  percentageChange: number;\n}\n\nexport interface TransactionVolume {\n  month: string;\n  amount: number;\n}\n"
  }
]